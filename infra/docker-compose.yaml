<<<<<<< HEAD
version: '3.8'

services:
  db:
=======

# версия docker-compose
version: '3.8'

# имена и описания контейнеров, которые должны быть развёрнуты
services:
  # описание контейнера db
  db:
    # образ, из которого должен быть запущен контейнер
>>>>>>> 3fd775c7130b4ada7e600e518f68aa0b4b051b87
    image: postgres:13.0-alpine
    expose:
      - "5432"
    environment:
      DB_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_HOST: db
<<<<<<< HEAD
    volumes:
      - /var/lib/postgresql/data/
=======
    # volume и связанная с ним директория в контейнере
    volumes:
      - /var/lib/postgresql/data/
    # адрес файла, где хранятся переменные окружения
    env_file:
      - ./.env
  web:
    build: ../api_yamdb/
    restart: always
    volumes:
      # Контейнер web будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /app/static/
      - static_value:/a/infrapp/static/
      # Данные, хранящиеся в томе media_value, будут доступны в контейнере web 
      # через директорию /app/media/
      - media_value:/app/media/
    # «зависит от», 
    depends_on:
      - db
    env_file:
      - ./.env

  # Новый контейнер
  nginx:
    # образ, из которого должен быть запущен контейнер
    image: nginx:1.21.3-alpine

    # запросы с внешнего порта 80 перенаправляем на внутренний порт 80
    ports:
      - "80:80"

    volumes:
      # При сборке скопировать созданный конфиг nginx из исходной директории 
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/

    depends_on:
      # Контейнер nginx должен быть запущен после контейнера web
      - web

volumes:
  # Новые тома 
  static_value:
  media_value:

# версия docker-compose
version: '3.8'

# имена и описания контейнеров, которые должны быть развёрнуты
services:
  # описание контейнера db
  db:
    # образ, из которого должен быть запущен контейнер
    image: postgres:13.0-alpine
    expose:
      - "5432"
    environment:
      DB_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_HOST: db
    # volume и связанная с ним директория в контейнере
    volumes:
      - /var/lib/postgresql/data/
    # адрес файла, где хранятся переменные окружения
>>>>>>> 3fd775c7130b4ada7e600e518f68aa0b4b051b87
    env_file:
      - ./.env

  web:
    build: ../api_yamdb/
    restart: always
    volumes:
<<<<<<< HEAD
      - static_value:/app/static/
      - media_value:/app/media/
=======
      # Контейнер web будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /app/static/
      - static_value:/app/static/
      # Данные, хранящиеся в томе media_value, будут доступны в контейнере web 
      # через директорию /app/media/
      - media_value:/app/media/
    # «зависит от», 
>>>>>>> 3fd775c7130b4ada7e600e518f68aa0b4b051b87
    depends_on:
      - db
    env_file:
      - ./.env

<<<<<<< HEAD
  nginx:
    image: nginx:1.21.3-alpine

=======
  # Новый контейнер
  nginx:
    # образ, из которого должен быть запущен контейнер
    image: nginx:1.21.3-alpine

    # запросы с внешнего порта 80 перенаправляем на внутренний порт 80
>>>>>>> 3fd775c7130b4ada7e600e518f68aa0b4b051b87
    ports:
      - "80:80"

    volumes:
<<<<<<< HEAD
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      - static_value:/var/html/static/

      - media_value:/var/html/media/

    depends_on:
      - web

volumes:
=======
      # При сборке скопировать созданный конфиг nginx из исходной директории 
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/

    depends_on:
      # Контейнер nginx должен быть запущен после контейнера web
      - web

volumes:
  # Новые тома 
>>>>>>> 3fd775c7130b4ada7e600e518f68aa0b4b051b87
  static_value:
  media_value:

